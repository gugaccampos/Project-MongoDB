use("DadosCopa")
 
// Find para encontrar o grupo A
db.Grupo.find( { nome: "A" } );

//Rename collections
db.Grupo.renameCollection("Grupos");
 
//quantos grupos tem?
db.Grupos.find().count();

//retorna as seleções que tem mais de 0 títulos
db.Selecoes.aggregate([{
    $match: {
      titulos: {$gt: 0}
    }
}]).sort({
  titulos: -1
}).pretty();

db.Estadios.find({$where: function() {
    return (this.nome == 'Arena Kazan')
}
}).pretty();

// Adicionando um título para a seleção da Russia
db.Selecoes.update(
{ _id : ObjectId('63522d324b2f9088fea36bc8')},
{$set: { titulos : 1}});

// Desfazendo alteração anterior
db.Selecoes.update(
{ _id : ObjectId('63522d324b2f9088fea36bc8')},
{$set: { titulos : 0}});

//Group que retorna quantidade de gols dos playoffs
db.Confrontos.aggregate( [
  {
    $group: {
        _id: "$descricao",
       total_gols: { $sum: { $add : [ 
            '$gols_selecao1', '$gols_selecao2' 
        ]}}
    }
  }
] )

//Retorna a média de títulos por seleções
db.Selecoes.aggregate( [
  {
    $group: {
        _id: null,
       media: { $avg: "$titulos"},
       total_selecoes: {$count: {}}
    }
  },
] )

//Retorna as seleções e o nome dos seus respectivos grupos
db.Selecoes.aggregate( [ { $project : 
{ nome : true, _id: false, grupo: "$grupo.nome"} } ] )

//retorna o máximo de gols ocorridos em uma partida
db.Confrontos.aggregate( [
  {
    $group: {
        _id: false,
       maior_gols: { $max: { $add : ['$gols_selecao1', '$gols_selecao2' ]}}
    },
  }

] )

// Retornando as 3 seleções com maior pontuação na fase de grupos
db.Selecoes.find().sort({pt_fase_grupo: -1}).limit(3)

//Deletando um campo e usando a $exists para
//detectar quais itens em Selecoes está sem o atributo 'titulos'
db.Selecoes.update(
{ _id : ObjectId('63522d324b2f9088fea36bc8')},
{$unset: { titulos : 0}});

db.Selecoes.find( { titulos: { $exists: false } } )



